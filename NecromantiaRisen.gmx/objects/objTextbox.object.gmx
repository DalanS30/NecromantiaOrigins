<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x = 48
//y = 16
w = room_width - 96 
h = room_height - 128
text_width = w - 8

overlay = 0

button[0] = instance_create(x, y + h, objButton)
button[1] = instance_create(x + w/2, y + h, objButton)
button[2] = instance_create(x, y + h + 40, objButton)
button[3] = instance_create(x + w/2, y + h + 40, objButton)

items = ds_list_create()

time = 60
utime = 0

alt = false //alternative text
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>area_width = global.MonitorWidth - 150; //400
area_height = global.MonitorHeight - 400; //600
area_x = 40
area_y = 20
area_surface = surface_create(area_width, area_height)
area_color = make_color_hsv(0, 0, 240)
text_color = make_color_hsv(0, 0, 40)
text_font = fntNormal
text_width = area_width
// detect text height:
draw_set_font(text_font)
Start();
text_height = string_height_ext(text, -1, text_width)
//
scroll_pos = 0
scroll_scale = max(0, text_height - area_height)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i = 0; i &lt; 4; i++)
{
    if button[i].pressed
        buttonClick(i)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button(mb_left)
{
    scroll_pos = median(0, 1, (mouse_y - area_y) / area_height)
}
surface_set_target(area_surface)
draw_set_color(area_color)
draw_rectangle(0, 0, area_width, area_height, false)
draw_set_color(text_color)
draw_text_ext(0, -scroll_pos * scroll_scale, text, -1, text_width)
surface_reset_target()
draw_surface(area_surface, area_x, area_y)
draw_set_color(text_color)
draw_rectangle(area_x - 1, area_y - 1, area_x + area_width, area_y + area_height, true)
draw_set_color(area_color)
draw_circle(area_x + area_width, area_y + area_height * scroll_pos, 4, false)
draw_set_color(text_color)
draw_circle(area_x + area_width, area_y + area_height * scroll_pos, 4, true)

// old
draw_set_font(fntSmall)



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
